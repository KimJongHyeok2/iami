<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<context:property-placeholder
	location="classpath:emailproperty.properties, classpath:db.properties, classpath:facebook.properties, classpath:google.properties"/>

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/"/>
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DataSource -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${db.driverclassname}"/>
		<beans:property name="url" value="${db.url}"/>
		<beans:property name="username" value="${db.username}"/>
		<beans:property name="password" value="${db.password}"/>
	</beans:bean>
	
	<!-- JdbcTemplate -->
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- SqlSession -->
	<beans:bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:com/web/iami/persistent/*.xml"/>
	</beans:bean>
	
	<beans:bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<!-- Mail -->
	<beans:bean name="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host">
			<beans:value>${email.host}</beans:value>
		</beans:property>
		<beans:property name="port">
			<beans:value>${email.port}</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>${email.username}</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>${email.password}</beans:value>
		</beans:property>
		<beans:property name="defaultEncoding">
			<beans:value>${email.defaultEncoding}</beans:value>
		</beans:property>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">${email.protocol}</beans:prop>
				<beans:prop key="mail.smtp.auth">${email.auth}</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">${email.enable}</beans:prop>
				<beans:prop key="mail.debug">${email.debug}</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean name="visitorIntercepter" class="com.web.iami.intercepter.VisitorIntercepter"/>
	
	<!-- Intercepter -->
	<interceptors>
		<interceptor>
			<mapping path="/"/>
			<mapping path="/portfolio/view/*"/>
			<mapping path="/login"/>
			<mapping path="/register"/>
			<beans:ref bean="visitorIntercepter"/>
		</interceptor>
	</interceptors>

	<!-- AOP -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<beans:bean name="loggingAspect" class="com.web.iami.aop.LoggingAspect"/>

	<!-- Facebook Social -->
	<beans:bean id="facebookConnectionFactory" class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
		<beans:constructor-arg value="${fb.clientId}"/>
		<beans:constructor-arg value="${fb.secretCode}"/>
	</beans:bean>
	
	<beans:bean id="facebookOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="email"/>
		<beans:property name="redirectUri" value="${fb.redirectUri}"/>
		<beans:qualifier value="facebookOAuth2Parameters"/>
	</beans:bean>
	
    <beans:bean id="googleOAuth2Template"
        class="org.springframework.social.google.connect.GoogleOAuth2Template">
        <beans:constructor-arg value="${go.clientId}"/>
        <beans:constructor-arg value="${go.secretCode}"/>
    </beans:bean>
	
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="profile email"/>
		<beans:property name="redirectUri" value="${go.redirectUri}"/>
		<beans:qualifier value="googleOAuth2Parameters"/>
	</beans:bean>
	
 	<beans:bean id="googleSocialInfo" class="com.web.iami.domain.SocialInfoDTO">
		<beans:property name="clientId" value="${go.clientId}"/>
		<beans:property name="secretCode" value="${go.secretCode}"/>
	</beans:bean>

	<context:component-scan base-package="com.web.iami"/>
	
</beans:beans>
