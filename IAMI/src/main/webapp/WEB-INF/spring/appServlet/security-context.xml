<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:annotation-config/>
	<context:property-placeholder
	location="classpath:db.properties"/>

	<security:http use-expressions="true" authentication-manager-ref="normal">
		<security:form-login login-page="/login"
		username-parameter="mem_id"
		password-parameter="mem_pw"
		login-processing-url="/loginOk"
		authentication-failure-handler-ref="customAuthenticationFailureHandler"
		authentication-success-handler-ref="customAuthenticationSuccessHandler"
		default-target-url="/"
		/>
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:intercept-url pattern="/portfolio/write" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/portfolio/update" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/portfolio/delete" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/upload/**" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/member/**" access="hasRole('ROLE_USER')"/>
		<security:logout logout-url="/logout" logout-success-url="/login"/>
		<security:access-denied-handler error-page="/access-denied"/>
		<security:session-management>
			<security:concurrency-control max-sessions="1" expired-url="/expired-login"/>
		</security:session-management>
	</security:http>
	
	<security:authentication-manager id="normal">
		<security:authentication-provider ref="customAuthenticationProvider"/>
		<security:authentication-provider user-service-ref="customUserDetailService"/>
	</security:authentication-manager>
	
	<bean name="customAuthenticationProvider" class="com.web.iami.security.CustomAuthenticationProvider"/>
	<bean name="customUserDetailService" class="com.web.iami.security.CustomUserDetailService"/>
	<bean name="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean name="customAuthenticationFailureHandler" class="com.web.iami.security.CustomAuthenticationFailureHandler">
		<property name="mem_id" value="mem_id"/>
		<property name="mem_pw" value="mem_pw"/>
		<property name="errormsgname" value="errorMsg"/>
		<property name="defaultFailUrl" value="/login"/>
	</bean>
	<bean name="customAuthenticationSuccessHandler" class="com.web.iami.security.CustomAuthenticationSuccesHandler">
		<property name="mem_id" value="mem_id"/>
		<property name="defaultUrl" value="/"/>
	</bean>

	<!-- DataSource -->
	<bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driverclassname}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>

	<!-- JdbcTemplate -->
	<bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- SqlSession -->
	<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:com/web/iami/security/*.xml"/>
	</bean>
	
	<bean name="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<context:component-scan base-package="com.web.iami.security"/>

</beans>